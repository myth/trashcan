# -*- encoding: utf-8 -*-

import logging
import time
from tools import *

from datastructures import *
i = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] #4-2
j = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] #4-1
#constraints 4-1, 4-2
constrains = [('1', '2'), ('1', '3'), ('1', '4'), ('1', '5'), ('1', '6'), ('1', '7'), ('1', '8'), ('1', '9'), ('2', '1'), ('2', '3'), ('2', '4'), ('2', '5'), ('2', '6'), ('2', '7'), ('2', '8'), ('2', '9'), ('3', '1'), ('3', '2'), ('3', '4'), ('3', '5'), ('3', '6'), ('3', '7'), ('3', '8'), ('3', '9'), ('4', '1'), ('4', '2'), ('4', '3'), ('4', '5'), ('4', '6'), ('4', '7'), ('4', '8'), ('4', '9'), ('5', '1'), ('5', '2'), ('5', '3'), ('5', '4'), ('5', '6'), ('5', '7'), ('5', '8'), ('5', '9'), ('6', '1'), ('6', '2'), ('6', '3'), ('6', '4'), ('6', '5'), ('6', '7'), ('6', '8'), ('6', '9'), ('7', '1'), ('7', '2'), ('7', '3'), ('7', '4'), ('7', '5'), ('7', '6'), ('7', '8'), ('7', '9'), ('8', '1'), ('8', '2'), ('8', '3'), ('8', '4'), ('8', '5'), ('8', '6'), ('8', '7'), ('8', '9'), ('9', '1'), ('9', '2'), ('9', '3'), ('9', '4'), ('9', '5'), ('9', '6'), ('9', '7'), ('9', '8')]
e = create_sudoku_csp("sudokus/easy.txt")
print e.revise(e, '4-2', '4-1')




#
#{'2-2': ['1', '2', '3', '4', '5', '6', '7', '8', '9'], '4-7': ['1', '2', '3', '4', '5', '6', '7', '8', '9'] Domains
#[('1', '3'), ('2', '3'), ('4', '3'), ('5', '3'), ('6', '3'), ('7', '3'), ('8', '3'), ('9', '3')] Constrains (4-7, 4-0)

# e.create_random_board()
#
# t = time.time()
#
# print e
#
# temp_max = 0
# temp = e
#
# while True:
#
#     neighbors = temp.create_neighbors(6)
#     current = temp
#
#     for n in neighbors:
#         if n.objective() > temp_max:
#             temp = n
#             temp_max = n.objective()
#
#     if temp is not current:
#         print "Found better neighbor... %f" % temp_max
#         print temp
#
#
#     if temp.objective() == 1.0:
#         print temp
#         break
#
# print "Took %f seconds" % (time.time() - t)
